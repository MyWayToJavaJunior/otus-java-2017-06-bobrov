#################################################
##Don't obfuscate or remove your entry point

-keep public class ru.otus.lottery.Main {
  public static void main(java.lang.String[]);
}

#################################################
## Suppress warnings from javax.servlet for example

#-dontwarn javax.servlet.**

#################################################
## Uncomment if you want to have more meaningful backtraces
## Useful for obfuscation debugging
## You absolutely must keep this commented out for production

#-keepattributes SourceFile,LineNumberTable

#################################################
#

#-adaptclassstrings
#-adaptresourcefilecontents **.xml
#-adaptresourcefilenames

#################################################
## Also keep - Swing UI L&F. Keep all extensions of javax.swing.plaf.ComponentUI,
## along with the special 'createUI' method.

#-keep class * extends javax.swing.plaf.ComponentUI {
#  public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent);
#}

#################################################
## Keep native methods

#-keepclasseswithmembernames,includedescriptorclasses class * {
#  native <methods>;
#}

## The CPointer field is referenced from dll, keep it

# -keepclasseswithmembers,includedescriptorclasses class com.yourcompany.NativeClass {
#     protected long CPointer;
# }

#################################################
## This option removes all package names.
## with -adaptresourcefilenames it may cause some resource files to clash.
## If that happens, try -flattenpackagehierarchy instead

-repackageclasses

##

-overloadaggressively
-allowaccessmodification

#################################################
##Optimization

-optimizations !code/allocation/variable